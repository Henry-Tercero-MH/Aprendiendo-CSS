/* Regla CSS consta de 2 partes */
/* 1) Selector
2) Bloque de declaraciones
atributo:valor;
atributo-de-mas-dos-palabras-: valos-dos; */

/* son mala practica porque bloquea al navegar y no permite que termine de leer el codigo completo */
@import url(otroHoja.css);

h1 {
  color: orangered;
  background-color: black;
}
h2 {
  color: greenyellow;
  background-color: black;
  border-style: solid;
}

p {
  color: blueviolet;
}

/* es una mala practica \/ */
#parrafo-dos {
  background-color: black;
}

/* dar estilos con clase nos permite reutilizar nuestro texto */

.bg-skyblue {
  background-color: steelblue;
}

.bg-steelblue {
  background-color: saddlebrown;
}

.texto20 {
  font-size: 20px;
}

.texto32 {
  font-size: 32px;
}

.textwhite {
  color: white;
}

.hijos-directos > li {
  background-color: thistle;
  border-style: aqua;
}

.hijos-descendientes > li {
  background-color: chartreuse;
}

/* los selectores de hnos aplican a los elementos que son hermanos
 o que estan en el mismo nivel por debajo del elemento de referencia */
.hermanos-general ~ li {
  background-color: greenyellow;
}

.hermanos-adyacentes + li {
  background-color: greenyellow;
}

/* selectores de atributos */
.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/* el comodin del * aplica a estilo si contiene el texto en cuestion  */
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}
/* se aplica conforme ^ a la palabra especificada  */
.selectores-atributos a[href^="https"] {
  text-decoration: none;
}
/* se aplica conforme a $ la palabra especificada */
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/* el comodin del ~ aplica a estilo si contiene el texto en cuestion en una lista separada por espacios */
.selectores-atributos a[class~="cursos"] {
  background-color: blue;
}

/* el comodin del | aplica a estilo si contiene el texto en cuestion y que despues de texto pueda venir un guion medio - */
.selectores-atributos a[class|="ahora"] {
  font-style: italic;
}

/* selector universal (*) aplica un etilo a todo  */
* {
  font-family: sans-serif;
}
.selector-universal * {
  border-color: greenyellow;
  color: orangered;
  background-color: black;
  font-size: 50px;
}
/* Las Pseudoclases dan estilo dependiendo el contexto, posicion o estado del elemento
    consultar https://developer.mozilla */
.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}
.form-pseudoclases *:focus {
  background-color: orangered;
}
.form-pseudoclases *:disable {
  border-color: pink;
}
.menu-pseudoclases a:hover {
  color: olivedrab;
}

.p-pseudoclases:hover {
  font-size: 20px;
}
#temario-css:target {
  background-color: lightblue;
}

.lista-pseudoclases li:first-child {
  color: green;
}

.lista-pseudoclases li:last-child {
  color: red;
}

.lista-pseudoclases li:nth-child(5) {
  color: red;
}
.lista-pseudoclases li:nth-child(4n) {
  color: blue;
}
.lista-pseudoclases li:nth-child(3n + 1) {
  font-weight: bold;
}
.lista-pseudoclases li:nth-child(even) {
  background-color: greenyellow;
}
.lista-pseudoclases li:nth-child(odd) {
  background-color: green;
}
.articulo-pseudoclase p:first-of-type {
  background-color: yellow;
}
.articulo-pseudoclase p:last-of-type {
  background-color: brown;
}
.articulo-pseudoclase p:nth-of-type(3) {
  background-color: fuchsia;
}
.articulo-pseudoclase *:not(p) {
  font-size: 25px;
}

/* 
Pseudoelementos: dan estilos a partes especificas de un elemento, se usa el :: para difereciarlo de los pseudoclases
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-elements */

.saga-geminis::before {
  content: "ðŸ˜Š";
}
.saga-geminis::after {
  content: "ðŸ˜’";
}
.saga-precio::before {
  content: "$.";
  font-weight: bold;
}
.saga-precio::after {
  content: ".USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32 px;
}

.p-pseudoelementos::first-line {
  color: orangered;
}

/* Con el selector universal * se pede aplicar a todo el documento */
.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: black;
}

.input-pseudoelementos::placeholder {
  color: green;
}
/* agrupar selectores */
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}
/* 
El Algoritmo de CSS: Es la forma en que el navegador aplica los estilos al documento HTML.
Es vital entender este concepto para comprender como se aplica y en alguinas ocaciones se sobrescriben
las reglas CSS
1) La Cascada
2) La Especificidad
3) La Herencia 
https://web.dev/i18n/es/    
*/

/* 
La cascada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta 
lo siguiente en este orden:
1). El origen del codigo:
-El user Agent(los estilos por defecto del navegador)
-Personalizaciones de usuario
-Los estilos del autor
2). La especificidad del autor
3). Orden de Aparicion



La herencia es la capacidad de un selector de obetener(heredar) los valores de sus ancestros mas cercanos,
para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en 
cuestion con el valor inicial
 */

.cita-marco {
  background-color: brown;
  font-size: 32px;
}
blockquote.cita-marco {
  background-color: greenyellow;
}
blockquote {
  background-color: cadetblue;
  border-style: dotted;
  border-color: red;
}
blockote#cita-marco {
  background-color: lightsalmon;
}

.cita-marco cite {
  background-color: orangered;
  font-size: 20px;
}
.aprende-css {
  position: sticky;
  background-color: orangered;
  text-align: center;
  top: 0px;
  bottom: 10px;
}
.aprende-css {
  background-color: orangered;
  position: fixed;
  width: 1000px;
  height: 20px;
  bottom: 10px;
  top: 10px;
  left: 10px;
}
